post:
  summary: Submit a payment request
  description: Initiate Payment
  operationId: payment
  parameters:
    - name: WP-Api-Version
      in: header
      description: The API version
      required: true
      schema:
        type: string
        description: The API version
        example: '2024-06-01'
        enum:
          - '2024-06-01'
      example: '2024-06-01'
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/PaymentRequest.yaml
        examples:
          Card payment (ecom):
            $ref: examples/requests/card-payment.yaml
          Card payment (moto):
            $ref: examples/requests/card-payment_moto.yaml
          Card payment (auto settlement enabled):
            $ref: examples/requests/card-payment-auto-settlement.yaml
          Card payment (with 3DS authentication):
            $ref: examples/requests/card-payment-3ds.yaml
          Card payment (with SCA exemption in authorization):
            $ref: examples/requests/card-payment-exemption-authorization.yaml
          Card payment (with Fraud assessment):
            $ref: examples/requests/card-payment-fraud.yaml
          Card payment (with Payment facilitator):
            $ref: examples/requests/card-payment-payfac.yaml
          Card payment using Checkout session:
            $ref: examples/requests/card-payment-checkout.yaml
          Card payment & store a card (Worldpay Token):
            $ref: examples/requests/store-card-token.yaml
          Use a stored card (Worldpay Token):
            $ref: examples/requests/use-stored-card-token.yaml
          Use a stored card (Network Token):
            $ref: examples/requests/use-stored-card-network-token.yaml
          Use a stored card (Worldpay Token) & Checkout CVC session:
            $ref: examples/requests/use-stored-card-checkout-cvc.yaml
          Use Google Pay encrypted payload:
            $ref: examples/requests/google-pay-encrypted.yaml
          Use Apple Pay encrypted payload:
            $ref: examples/requests/apple-pay-encrypted.yaml
          Setup a subscription payment:
            $ref: examples/requests/setup-recurring-subscription.yaml
          Setup a subscription with no initial payment:
            $ref: examples/requests/setup-recurring-subscription-zero.yaml
          Setup an installment payment (merchant):
            $ref: examples/requests/setup-recurring-installment-merchant.yaml
          Setup an installment payment (Latin America):
            $ref: examples/requests/setup-recurring-installment-latam.yaml
          Subsequent subscription payment:
            $ref: examples/requests/subsequent-recurring-subscription.yaml
          Subsequent installment payment (merchant):
            $ref: examples/requests/subsequent-recurring-installment-merchant.yaml
          Unscheduled payment:
            $ref: examples/requests/recurring-unscheduled.yaml
          Store a card only:
            $ref: examples/requests/store-card-only-token.yaml
    required: true
  responses:
    '201':
      description: Created
      content:
        application/json:
          schema:
            $ref: ../components/schemas/PaymentsResponse201.yaml
          examples:
            authorized:
              $ref: examples/responses/authorized-201.yaml
            3dsDeviceDataRequired:
              $ref: examples/responses/3ds-device-data-required-201.yaml
            fraudHighRisk:
              $ref: examples/responses/fs-highrisk.yaml
            refused:
              $ref: examples/responses/refused-201.yaml
    '202':
      description: Accepted
      content:
        application/json:
          schema:
            $ref: ../components/schemas/PaymentsResponse202.yaml
          examples:
            sentForSettlement:
              $ref: examples/responses/sent-for-settlement-202.yaml
            sentForCancellation:
              $ref: examples/responses/sent-for-cancellation-202.yaml
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ValidationErrorResponse.yaml
          examples:
            Bad request:
              $ref: examples/responses/errors/400.yaml
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorResponse.yaml
          examples:
            Unauthorized:
              $ref: examples/responses/errors/401.yaml
    '404':
      description: Not found
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorResponse.yaml
          examples:
            Not found:
              $ref: examples/responses/errors/404.yaml
    '406':
      description: Not acceptable
      content:
        application/json:
          schema:
            $ref: ../components/schemas/HeaderErrorResponse.yaml
          examples:
            Not acceptable:
              $ref: examples/responses/errors/406.yaml
    '415':
      description: Unsupported media type
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorResponse.yaml
          examples:
            Unsupported media type:
              $ref: examples/responses/errors/415.yaml
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorResponse.yaml
          examples:
            Internal server error:
              $ref: examples/responses/errors/500.yaml
  x-noTag: noTag
  x-orderingPosition: '1'
